apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'sonar-runner'
apply plugin: 'pitest'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'ninja.ugly'
version = '0.2.1-SNAPSHOT'
ext.artifact= 'prevail'

buildscript {
    dependencies {
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:0.33.0'
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        if (project.version.endsWith('-SNAPSHOT'))
            ext.repoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
        else
            ext.repoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"

        repository(url: repoUrl) {
            authentication(userName: "${sonatype_username}", password: "${sonatype_password}")
        }

        pom.artifactId = project.ext.artifact

        pom.project {
            name 'Prevail'
            packaging 'jar'
            description 'Prevail is a simple data abstraction library for event driven data.'
            url 'http://brycecicada.github.com/Prevail'

            scm {
                url 'scm:git@github.com:BryceCicada/Prevail.git'
                connection 'scm:git@github.com:BryceCicada/Prevail.git'
                developerConnection 'scm:git@github.com:BryceCicada/Prevail.git'
            }

            licenses {
                license {
                    name 'The MIT License'
                    url 'https://github.com/BryceCicada/Prevail/blob/master/LICENSE.md'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'brycecicada'
                    name 'Chris Nix'
                }
            }
        }
    }

}

pitest {
    targetClasses = ['ninja.ugly.prevail.*']
    threads = 4
    enableDefaultIncrementalAnalysis = true
    outputFormats = ['XML', 'HTML']
}

dependencies {
    compile 'com.google.guava:guava:16.0.1'

    testCompile 'com.google.guava:guava:16.0.1'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile("junit:junit:4.11") {
        exclude group: 'org.hamcrest', module: 'hamcrest-core-1.1'
    }
    testCompile('org.mockito:mockito-core:1.9.5') {
        exclude group: 'org.hamcrest', module: 'hamcrest-core-1.1'
    }
}

sonarRunner {
    sonarProperties {
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.jdbc.url", "jdbc:h2:tcp://localhost:9092/sonar"
        property "sonar.jdbc.driverClassName", "org.h2.Driver"
        property "sonar.jdbc.username", "sonar"
        property "sonar.jdbc.password", "sonar"
        property "sonar.branch", "gradle"
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.junit.reportsPath", "build/test-results/"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest/"
    }
}